<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>特殊サイコロツール</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            background-color: #f0f2f5;
            color: #333;
            margin: 0;
            padding: 20px;
            box-sizing: border-box;
        }

        .container {
            background-color: #ffffff;
            padding: 40px 60px;
            border-radius: 12px;
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
            text-align: center;
            max-width: 90%;
            width: 400px;
        }

        h1 {
            color: #4CAF50; /* Green */
            margin-bottom: 30px;
            font-size: 2.5em;
            letter-spacing: 1px;
        }

        .dice-display {
            font-size: 8em;
            font-weight: bold;
            color: #FF5722; /* Orange */
            margin: 40px 0;
            border: 5px solid #FF5722;
            border-radius: 15px;
            padding: 20px 0;
            min-height: 120px; /* Ensure consistent height */
            display: flex;
            justify-content: center;
            align-items: center;
            background-color: #fffaf0; /* Light orange background */
            box-shadow: inset 0 0 15px rgba(0, 0, 0, 0.1);
            transition: transform 0.1s ease-out; /* For shake effect */
        }

        button {
            background-color: #4CAF50; /* Green */
            color: white;
            padding: 15px 30px;
            border: none;
            border-radius: 8px;
            font-size: 1.5em;
            cursor: pointer;
            transition: background-color 0.3s ease, transform 0.1s ease;
            width: 100%;
            box-sizing: border-box;
        }

        button:hover {
            background-color: #45a049;
            transform: translateY(-2px);
        }

        button:active {
            background-color: #3e8e41;
            transform: translateY(0);
        }

        /* Animation for shaking effect */
        .shake {
            animation: shake 0.3s cubic-bezier(.36,.07,.19,.97) both;
            transform: translate3d(0, 0, 0);
            backface-visibility: hidden;
            perspective: 1000px;
        }

        @keyframes shake {
            10%, 90% {
                transform: translate3d(-1px, 0, 0);
            }
            20%, 80% {
                transform: translate3d(2px, 0, 0);
            }
            30%, 50%, 70% {
                transform: translate3d(-4px, 0, 0);
            }
            40%, 60% {
                transform: translate3d(4px, 0, 0);
            }
        }

        p {
            margin-top: 30px;
            font-size: 0.9em;
            color: #666;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>特殊サイコロ</h1>
        <div id="diceResult" class="dice-display">?</div>
        <button onclick="rollDice()">サイコロを振る</button>
        <p>1, 2, 3のいずれかの目が出る6面サイコロです。</p>
    </div>

    <script>
        function rollDice() {
            const diceResultElement = document.getElementById('diceResult');
            // サイコロを振るアニメーションのためにshakeクラスを追加
            diceResultElement.classList.remove('shake');
            void diceResultElement.offsetWidth; // DOMをリフローさせるトリック
            diceResultElement.classList.add('shake');

            // 1から3までの整数をランダムに生成（各数字が2回ずつ出現するイメージ）
            // Math.random()は0以上1未満の乱数を生成
            // (Math.floor(Math.random() * 6) + 1) で1から6の整数を生成
            // その結果を1,2,3にマッピング
            const randomNumber = Math.floor(Math.random() * 6) + 1;
            let result;

            if (randomNumber === 1 || randomNumber === 2) {
                result = 1;
            } else if (randomNumber === 3 || randomNumber === 4) {
                result = 2;
            } else { // randomNumber === 5 || randomNumber === 6
                result = 3;
            }

            // 結果を表示
            setTimeout(() => {
                diceResultElement.textContent = result;
            }, 300); // アニメーションの後に数字を表示
        }
    </script>
</body>
</html>
